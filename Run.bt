// Common
if (!exists(isDKCTF)) {
    local uint isDKCTF <hidden=true> = false;
    LittleEndian();
}

#include "Common.bt"
#include "CChunkDescriptor.bt"
#include "CFormDescriptor.bt"

// Meta
#include "NTextureFormat.bt"
#include "Meta.bt"

// Files
#include "CCharInfo.bt"
#include "CLightProbeData.bt"
#include "CGraphicsModel.bt"
#include "CPakFile.bt"
#include "MessageStudioBinaryText.bt"
#include "MaterialArchive.bt"
#include "CVectorField.bt"
#include "CAABoxCollisionTree.bt"
#include "CReflectionProbeData.bt"
#include "CLegacyStateMachine.bt"
//#include "CRuleSet.bt"
#include "CScaleformFlashLibrary.bt"

// Custom footer
#include "Footer.bt"

typedef struct
{
    FormDescriptor form;
    local uint64 start <format=hex, hidden=true> = FTell();
    switch (form.id)
    {
        case "MTRL":
            if (form.readerVersion == 168) {
                byte MTRLRaw [form.size]; //For now
            } else if (form.readerVersion == 22) {
                MaterialArchive materialArchive(form.size);
            } else {
                Assert("Invalid version!");
            }
            break;
        case "LTPB":
            CLightProbeData lightProbe(form.size);
            break;
        case "LFSM":
            if (!isDKCTF)
                BigEndian();
            CLegacyStateMachine legacyStateMachine;
            if (!isDKCTF)
                LittleEndian();
            break;
        case "CLSN":
            CAABoxCollisionTree aaboxCollisionTree(form.size);
            break;
        case "CHPR":
            FCharInf charInfo;
            break;
        case "CMDL":
        case "SMDL":
        case "WMDL":
            ModelFile model(form.size);
            break;
        case "MSBT":
            MessageStudioBinaryText text;
            break;
        case "PACK":
            CPakFile pak;
            break;
        case "TXTR":
            NTextureFormat texture(form.size);
            break;
        case "REFL":
            CReflectionProbeData probeData;
            break;
        /*case "RULE":
            CRuleSet rulesetconfig(form.size);
            break;*/
        case "GFXL":
            CScaleformFlashLibrary scaleformflashlibrary;
            break;
        /*case "GFX ":
            CFlashMovieResource flashmovieresource(form.size);
            break;*/
        case "VECF":
            CVectorField vectorField;
            break;
    }
    FSeek(start + form.size);
} File <open=true, bgcolor=cSilver>;

File file <bgcolor=cGray, name=(Str("%s rv%d wv%d file", form.id, form.readerVersion, form.writerVersion))>;

// Custom footer for extracted files
if (ReadString(FTell(), 4) == "RFRM")
{
    Footer footer(file.form.id) <bgcolor=cLtBlue>;
}
