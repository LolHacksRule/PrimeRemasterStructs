#ifndef _CLIGHTPROBEDATA
#define _CLIGHTPROBEDATA

#include "CChunkDescriptor.bt"
#include "CFormDescriptor.bt"
#include "NTextureFormat.bt"
#include "CVector3f.bt"
#include "CVector3i.bt"

typedef struct {
    int16 x;
    int16 y;
    int16 z;
} CBakedLightingUniformProbeGridIndex;

struct LightProbeBundleHeader {
    uint32 unk1;
    uint32 unk2;
    CVector3f unk3;
    CBakedLightingUniformProbeGridIndex unk4;
    CBakedLightingUniformProbeGridIndex unk5;
};

struct SLightProbeMetaData(uint64 fileStart) {
    uint32 unk1;
    uint32 unk2;
    uint32 metaOffsetCount;
    if (metaOffsetCount > 0) {
        uint64 metaOffsets[metaOffsetCount];
    }
    uint32 txtrOffsetCount;
    if (txtrOffsetCount > 0) {
        uint64 txtrOffsets[txtrOffsetCount];
    }
};

struct LightProbeBundle {
    STextureMetaData metaData(FTell() + 0x4D /* start of TXTR */);
    CVector3i unkVector;
    uint unk;
    FormDescriptor textureForm;
    NTextureFormat txtrChunk(textureForm.size);
};

typedef struct CLightProbeData(uint64 size) {
    local uint64 start <hidden=true> = FTell();
    ChunkDescriptor phdr;
    LightProbeBundleHeader bundleHeader;
    ChunkDescriptor ptext;
    while (FTell() < start + size) {
        LightProbeBundle bundle;
    }
} CLightProbeData;

#endif// _CLIGHTPROBEDATA
